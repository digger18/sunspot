{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheats",
      "outputs": [
        {
          "internalType": "contract ICheats",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAtomicMatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCannotAtomicMatchWhenNotEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCannotSetEnabledWhenNotOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCannotSetFeeArbiterWhenNotOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetFeeArbiter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506123408061002d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c80637424b36c116200006e5780637424b36c14620001135780637772e842146200011d57806394ab9ac11462000127578063ba414fa61462000131578063fa7626d4146200014c57600080fd5b80630a9254e414620000b05780631dd5abf814620000bc5780632a5c2bf214620000c657806336e6d5ea14620000d0578063700180c614620000da575b600080fd5b620000ba6200015a565b005b620000ba620001c1565b620000ba62000396565b620000ba620004e7565b620000f6737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b620000ba620005d6565b620000ba620006c1565b620000ba6200078f565b6200013b620008cd565b60405190151581526020016200010a565b6000546200013b9060ff1681565b61beef6040516200016b9062000cdf565b6001600160a01b039091168152602001604051809103906000f08015801562000198573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b6040516303223eab60e11b8152610bad6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200021057600080fd5b505af115801562000225573d6000803e3d6000fd5b505060408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d935063f28dceb3925062000293919060040162000d4a565b600060405180830381600087803b158015620002ae57600080fd5b505af1158015620002c3573d6000803e3d6000fd5b5050600054604051634ed5f9db60e01b8152610abe6004820152620100009091046001600160a01b03169250634ed5f9db91506024015b600060405180830381600087803b1580156200031557600080fd5b505af11580156200032a573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d93506390c5013b9250600480830192600092919082900301818387803b1580156200037b57600080fd5b505af115801562000390573d6000803e3d6000fd5b50505050565b60008054604051631946c7b960e11b815260048101929092526201000090046001600160a01b03169063328d8f7290602401600060405180830381600087803b158015620003e357600080fd5b505af1158015620003f8573d6000803e3d6000fd5b5050604051630618f58760e51b8152633ac4266d60e11b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c31eb0e091506024015b600060405180830381600087803b1580156200045157600080fd5b505af115801562000466573d6000803e3d6000fd5b50505050600060029054906101000a90046001600160a01b03166001600160a01b031663a3bb9a59600060405180610ba00160405280610b648152602001620017d0610b6491396040518363ffffffff1660e01b8152600401620004cc92919062000d66565b600060405180830381600087803b1580156200037b57600080fd5b600054604051634ed5f9db60e01b8152610abe6004820152620100009091046001600160a01b031690634ed5f9db90602401600060405180830381600087803b1580156200053457600080fd5b505af115801562000549573d6000803e3d6000fd5b50505050620005d4600060029054906101000a90046001600160a01b03166001600160a01b031663b82dbacb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005cb919062000d89565b610abe62000a02565b565b60008054604051631946c7b960e11b815260048101929092526201000090046001600160a01b03169063328d8f7290602401600060405180830381600087803b1580156200062357600080fd5b505af115801562000638573d6000803e3d6000fd5b50505050620005d4600060029054906101000a90046001600160a01b03166001600160a01b031663238dafe06040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000694573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006ba919062000db4565b1562000b56565b600054604080516364f8517d60e11b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d9263bd6af43492620100009091046001600160a01b03169163c9f0a2fa916004808201926020929091908290030181865afa1580156200072d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000753919062000d89565b60405180610ba00160405280610b648152602001620017d0610b6491396040518363ffffffff1660e01b81526004016200043692919062000dd8565b6040516303223eab60e11b8152610bad6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620007de57600080fd5b505af1158015620007f3573d6000803e3d6000fd5b505060408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d935063f28dceb3925062000861919060040162000d4a565b600060405180830381600087803b1580156200087c57600080fd5b505af115801562000891573d6000803e3d6000fd5b505060008054604051631946c7b960e11b815260048101929092526201000090046001600160a01b0316925063328d8f729150602401620002fa565b60008054610100900460ff1615620008ee5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620009fd5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200097f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000dfe565b60408051601f19818403018152908290526200099b9162000e31565b6000604051808303816000865af19150503d8060008114620009da576040519150601f19603f3d011682016040523d82523d6000602084013e620009df565b606091505b5091505080806020019051810190620009f9919062000db4565b9150505b919050565b806001600160a01b0316826001600160a01b03161462000b52577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000a8a9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526001600160a01b038316602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a162000b5262000bd1565b5050565b8062000bce577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000bbc9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162000bce62000bd1565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000cce5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b92820192909252600160608201527f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000c6a929160200162000dfe565b60408051601f198184030181529082905262000c869162000e31565b6000604051808303816000865af19150503d806000811462000cc5576040519150601f19603f3d011682016040523d82523d6000602084013e62000cca565b606091505b5050505b6000805461ff001916610100179055565b6109808062000e5083390190565b60005b8381101562000d0a57818101518382015260200162000cf0565b83811115620003905750506000910152565b6000815180845262000d3681602086016020860162000ced565b601f01601f19169290920160200192915050565b60208152600062000d5f602083018462000d1c565b9392505050565b82815260406020820152600062000d81604083018462000d1c565b949350505050565b60006020828403121562000d9c57600080fd5b81516001600160a01b038116811462000d5f57600080fd5b60006020828403121562000dc757600080fd5b8151801515811462000d5f57600080fd5b6001600160a01b038316815260406020820181905260009062000d819083018462000d1c565b6001600160e01b031983168152815160009062000e2381600485016020870162000ced565b919091016004019392505050565b6000825162000e4581846020870162000ced565b919091019291505056fe60c0604052601d60808190527f73756e73706f742e67672074656c6573636f706520286d616e75616c2900000060a090815261003e9160029190610126565b50600480546001600160a01b031916737be8076f4ea4a4ad08075c2508e481d6c946d12b17905534801561007157600080fd5b50604051610980380380610980833981016040819052610090916101bf565b610099336100d6565b60018055600380546001600160a01b039092166001600160a01b03199092169190911790556004805460ff60a01b1916600160a01b17905561022a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610132906101ef565b90600052602060002090601f016020900481019282610154576000855561019a565b82601f1061016d57805160ff191683800117855561019a565b8280016001018555821561019a579182015b8281111561019a57825182559160200191906001019061017f565b506101a69291506101aa565b5090565b5b808211156101a657600081556001016101ab565b6000602082840312156101d157600080fd5b81516001600160a01b03811681146101e857600080fd5b9392505050565b600181811c9082168061020357607f821691505b6020821081141561022457634e487b7160e01b600052602260045260246000fd5b50919050565b610747806102396000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610149578063a3bb9a591461017b578063b82dbacb1461018e578063c9f0a2fa146101ae578063f2fde38b146101ce57600080fd5b806306fdde0314610096578063238dafe0146100c1578063328d8f72146100f25780634ed5f9db14610114578063715018a614610134575b600080fd5b3480156100a257600080fd5b506100ab6101ee565b6040516100b89190610558565b60405180910390f35b3480156100cd57600080fd5b506004546100e290600160a01b900460ff1681565b60405190151581526020016100b8565b3480156100fe57600080fd5b5061011261010d36600461058b565b61027c565b005b34801561012057600080fd5b5061011261012f3660046105b4565b6102cd565b34801561014057600080fd5b50610112610319565b34801561015557600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100b8565b6101126101893660046105f3565b61034f565b34801561019a57600080fd5b50600354610163906001600160a01b031681565b3480156101ba57600080fd5b50600454610163906001600160a01b031681565b3480156101da57600080fd5b506101126101e93660046105b4565b61043d565b600280546101fb906106ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610227906106ae565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b505050505081565b6000546001600160a01b031633146102af5760405162461bcd60e51b81526004016102a6906106e9565b60405180910390fd5b60048054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031633146102f75760405162461bcd60e51b81526004016102a6906106e9565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103435760405162461bcd60e51b81526004016102a6906106e9565b61034d60006104d8565b565b600260015414156103a25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102a6565b6002600155600454600160a01b900460ff166103d157604051633ac4266d60e11b815260040160405180910390fd5b6004546040516001600160a01b039091169083906103f090849061071e565b60006040518083038185875af1925050503d806000811461042d576040519150601f19603f3d011682016040523d82523d6000602084013e610432565b606091505b505060018055505050565b6000546001600160a01b031633146104675760405162461bcd60e51b81526004016102a6906106e9565b6001600160a01b0381166104cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a6565b6104d5816104d8565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8381101561054357818101518382015260200161052b565b83811115610552576000848401525b50505050565b6020815260008251806020840152610577816040850160208701610528565b601f01601f19169190910160400192915050565b60006020828403121561059d57600080fd5b813580151581146105ad57600080fd5b9392505050565b6000602082840312156105c657600080fd5b81356001600160a01b03811681146105ad57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561060657600080fd5b82359150602083013567ffffffffffffffff8082111561062557600080fd5b818501915085601f83011261063957600080fd5b81358181111561064b5761064b6105dd565b604051601f8201601f19908116603f01168101908382118183101715610673576106736105dd565b8160405282815288602084870101111561068c57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600181811c908216806106c257607f821691505b602082108114156106e357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008251610730818460208701610528565b919091019291505056fea164736f6c634300080a000aab834bab0000000000000000000000007f268357a8c2552623316e2562d90e642bb538e5000000000000000000000000446bfbb5185d79dbbfdb77f9ca81c51409c0480b000000000000000000000000206586b59c9f4b2cfa7604a18bc9c4061c334e7c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000baf2127b49fc93cbca6269fade0f7f31df4c88a7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f268357a8c2552623316e2562d90e642bb538e5000000000000000000000000206586b59c9f4b2cfa7604a18bc9c4061c334e7c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c01073000000000000000000000000baf2127b49fc93cbca6269fade0f7f31df4c88a70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002ee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c68af0bb140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000624f87da0000000000000000000000000000000000000000000000000000000000000000f2b764e430ed872f80daafceb70510090e97ef3975473964addbff9e1504247100000000000000000000000000000000000000000000000000000000000002ee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c68af0bb140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000624f87be000000000000000000000000000000000000000000000000000000006258c20848a84ca5a9736156b19d2d1c1ad8d70856a30e989f82429f2538f694efbef8fea000000000000000000000000000000000000000000000000000000000000007c000000000000000000000000000000000000000000000000000000000000008e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000b40000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001b01d85c5e16114b411865f6847c54d7e0fc820267506f6532f626605878aa97f400641967412d98ee83fb4c06c0217a0da6fca4b7654a8e8e755b5d6f62a9890201d85c5e16114b411865f6847c54d7e0fc820267506f6532f626605878aa97f400641967412d98ee83fb4c06c0217a0da6fca4b7654a8e8e755b5d6f62a98902000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a5950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000446bfbb5185d79dbbfdb77f9ca81c51409c0480b00000000000000000000000022d4c35a4f2b229a928b1b569b2f60225976426a000000000000000000000000000000000000000000000000000000000000050a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a595000000000000000000000000206586b59c9f4b2cfa7604a18bc9c4061c334e7c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022d4c35a4f2b229a928b1b569b2f60225976426a000000000000000000000000000000000000000000000000000000000000050a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe4000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa164736f6c634300080a000a",
    "sourceMap": "239:1269:5:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;239:1269:5;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c80637424b36c116200006e5780637424b36c14620001135780637772e842146200011d57806394ab9ac11462000127578063ba414fa61462000131578063fa7626d4146200014c57600080fd5b80630a9254e414620000b05780631dd5abf814620000bc5780632a5c2bf214620000c657806336e6d5ea14620000d0578063700180c614620000da575b600080fd5b620000ba6200015a565b005b620000ba620001c1565b620000ba62000396565b620000ba620004e7565b620000f6737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b620000ba620005d6565b620000ba620006c1565b620000ba6200078f565b6200013b620008cd565b60405190151581526020016200010a565b6000546200013b9060ff1681565b61beef6040516200016b9062000cdf565b6001600160a01b039091168152602001604051809103906000f08015801562000198573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b6040516303223eab60e11b8152610bad6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200021057600080fd5b505af115801562000225573d6000803e3d6000fd5b505060408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d935063f28dceb3925062000293919060040162000d4a565b600060405180830381600087803b158015620002ae57600080fd5b505af1158015620002c3573d6000803e3d6000fd5b5050600054604051634ed5f9db60e01b8152610abe6004820152620100009091046001600160a01b03169250634ed5f9db91506024015b600060405180830381600087803b1580156200031557600080fd5b505af11580156200032a573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d93506390c5013b9250600480830192600092919082900301818387803b1580156200037b57600080fd5b505af115801562000390573d6000803e3d6000fd5b50505050565b60008054604051631946c7b960e11b815260048101929092526201000090046001600160a01b03169063328d8f7290602401600060405180830381600087803b158015620003e357600080fd5b505af1158015620003f8573d6000803e3d6000fd5b5050604051630618f58760e51b8152633ac4266d60e11b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c31eb0e091506024015b600060405180830381600087803b1580156200045157600080fd5b505af115801562000466573d6000803e3d6000fd5b50505050600060029054906101000a90046001600160a01b03166001600160a01b031663a3bb9a59600060405180610ba00160405280610b648152602001620017d0610b6491396040518363ffffffff1660e01b8152600401620004cc92919062000d66565b600060405180830381600087803b1580156200037b57600080fd5b600054604051634ed5f9db60e01b8152610abe6004820152620100009091046001600160a01b031690634ed5f9db90602401600060405180830381600087803b1580156200053457600080fd5b505af115801562000549573d6000803e3d6000fd5b50505050620005d4600060029054906101000a90046001600160a01b03166001600160a01b031663b82dbacb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005cb919062000d89565b610abe62000a02565b565b60008054604051631946c7b960e11b815260048101929092526201000090046001600160a01b03169063328d8f7290602401600060405180830381600087803b1580156200062357600080fd5b505af115801562000638573d6000803e3d6000fd5b50505050620005d4600060029054906101000a90046001600160a01b03166001600160a01b031663238dafe06040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000694573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006ba919062000db4565b1562000b56565b600054604080516364f8517d60e11b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d9263bd6af43492620100009091046001600160a01b03169163c9f0a2fa916004808201926020929091908290030181865afa1580156200072d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000753919062000d89565b60405180610ba00160405280610b648152602001620017d0610b6491396040518363ffffffff1660e01b81526004016200043692919062000dd8565b6040516303223eab60e11b8152610bad6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620007de57600080fd5b505af1158015620007f3573d6000803e3d6000fd5b505060408051808201825260208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657290820152905163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d935063f28dceb3925062000861919060040162000d4a565b600060405180830381600087803b1580156200087c57600080fd5b505af115801562000891573d6000803e3d6000fd5b505060008054604051631946c7b960e11b815260048101929092526201000090046001600160a01b0316925063328d8f729150602401620002fa565b60008054610100900460ff1615620008ee5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620009fd5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200097f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000dfe565b60408051601f19818403018152908290526200099b9162000e31565b6000604051808303816000865af19150503d8060008114620009da576040519150601f19603f3d011682016040523d82523d6000602084013e620009df565b606091505b5091505080806020019051810190620009f9919062000db4565b9150505b919050565b806001600160a01b0316826001600160a01b03161462000b52577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000a8a9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526001600160a01b038316602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a162000b5262000bd1565b5050565b8062000bce577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000bbc9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162000bce62000bd1565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000cce5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b92820192909252600160608201527f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000c6a929160200162000dfe565b60408051601f198184030181529082905262000c869162000e31565b6000604051808303816000865af19150503d806000811462000cc5576040519150601f19603f3d011682016040523d82523d6000602084013e62000cca565b606091505b5050505b6000805461ff001916610100179055565b6109808062000e5083390190565b60005b8381101562000d0a57818101518382015260200162000cf0565b83811115620003905750506000910152565b6000815180845262000d3681602086016020860162000ced565b601f01601f19169290920160200192915050565b60208152600062000d5f602083018462000d1c565b9392505050565b82815260406020820152600062000d81604083018462000d1c565b949350505050565b60006020828403121562000d9c57600080fd5b81516001600160a01b038116811462000d5f57600080fd5b60006020828403121562000dc757600080fd5b8151801515811462000d5f57600080fd5b6001600160a01b038316815260406020820181905260009062000d819083018462000d1c565b6001600160e01b031983168152815160009062000e2381600485016020870162000ced565b919091016004019392505050565b6000825162000e4581846020870162000ced565b919091019291505056fe60c0604052601d60808190527f73756e73706f742e67672074656c6573636f706520286d616e75616c2900000060a090815261003e9160029190610126565b50600480546001600160a01b031916737be8076f4ea4a4ad08075c2508e481d6c946d12b17905534801561007157600080fd5b50604051610980380380610980833981016040819052610090916101bf565b610099336100d6565b60018055600380546001600160a01b039092166001600160a01b03199092169190911790556004805460ff60a01b1916600160a01b17905561022a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610132906101ef565b90600052602060002090601f016020900481019282610154576000855561019a565b82601f1061016d57805160ff191683800117855561019a565b8280016001018555821561019a579182015b8281111561019a57825182559160200191906001019061017f565b506101a69291506101aa565b5090565b5b808211156101a657600081556001016101ab565b6000602082840312156101d157600080fd5b81516001600160a01b03811681146101e857600080fd5b9392505050565b600181811c9082168061020357607f821691505b6020821081141561022457634e487b7160e01b600052602260045260246000fd5b50919050565b610747806102396000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610149578063a3bb9a591461017b578063b82dbacb1461018e578063c9f0a2fa146101ae578063f2fde38b146101ce57600080fd5b806306fdde0314610096578063238dafe0146100c1578063328d8f72146100f25780634ed5f9db14610114578063715018a614610134575b600080fd5b3480156100a257600080fd5b506100ab6101ee565b6040516100b89190610558565b60405180910390f35b3480156100cd57600080fd5b506004546100e290600160a01b900460ff1681565b60405190151581526020016100b8565b3480156100fe57600080fd5b5061011261010d36600461058b565b61027c565b005b34801561012057600080fd5b5061011261012f3660046105b4565b6102cd565b34801561014057600080fd5b50610112610319565b34801561015557600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100b8565b6101126101893660046105f3565b61034f565b34801561019a57600080fd5b50600354610163906001600160a01b031681565b3480156101ba57600080fd5b50600454610163906001600160a01b031681565b3480156101da57600080fd5b506101126101e93660046105b4565b61043d565b600280546101fb906106ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610227906106ae565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b505050505081565b6000546001600160a01b031633146102af5760405162461bcd60e51b81526004016102a6906106e9565b60405180910390fd5b60048054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031633146102f75760405162461bcd60e51b81526004016102a6906106e9565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103435760405162461bcd60e51b81526004016102a6906106e9565b61034d60006104d8565b565b600260015414156103a25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102a6565b6002600155600454600160a01b900460ff166103d157604051633ac4266d60e11b815260040160405180910390fd5b6004546040516001600160a01b039091169083906103f090849061071e565b60006040518083038185875af1925050503d806000811461042d576040519150601f19603f3d011682016040523d82523d6000602084013e610432565b606091505b505060018055505050565b6000546001600160a01b031633146104675760405162461bcd60e51b81526004016102a6906106e9565b6001600160a01b0381166104cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a6565b6104d5816104d8565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b8381101561054357818101518382015260200161052b565b83811115610552576000848401525b50505050565b6020815260008251806020840152610577816040850160208701610528565b601f01601f19169190910160400192915050565b60006020828403121561059d57600080fd5b813580151581146105ad57600080fd5b9392505050565b6000602082840312156105c657600080fd5b81356001600160a01b03811681146105ad57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561060657600080fd5b82359150602083013567ffffffffffffffff8082111561062557600080fd5b818501915085601f83011261063957600080fd5b81358181111561064b5761064b6105dd565b604051601f8201601f19908116603f01168101908382118183101715610673576106736105dd565b8160405282815288602084870101111561068c57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600181811c908216806106c257607f821691505b602082108114156106e357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008251610730818460208701610528565b919091019291505056fea164736f6c634300080a000aab834bab0000000000000000000000007f268357a8c2552623316e2562d90e642bb538e5000000000000000000000000446bfbb5185d79dbbfdb77f9ca81c51409c0480b000000000000000000000000206586b59c9f4b2cfa7604a18bc9c4061c334e7c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000baf2127b49fc93cbca6269fade0f7f31df4c88a7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f268357a8c2552623316e2562d90e642bb538e5000000000000000000000000206586b59c9f4b2cfa7604a18bc9c4061c334e7c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c01073000000000000000000000000baf2127b49fc93cbca6269fade0f7f31df4c88a70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002ee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c68af0bb140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000624f87da0000000000000000000000000000000000000000000000000000000000000000f2b764e430ed872f80daafceb70510090e97ef3975473964addbff9e1504247100000000000000000000000000000000000000000000000000000000000002ee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c68af0bb140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000624f87be000000000000000000000000000000000000000000000000000000006258c20848a84ca5a9736156b19d2d1c1ad8d70856a30e989f82429f2538f694efbef8fea000000000000000000000000000000000000000000000000000000000000007c000000000000000000000000000000000000000000000000000000000000008e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000b40000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001b01d85c5e16114b411865f6847c54d7e0fc820267506f6532f626605878aa97f400641967412d98ee83fb4c06c0217a0da6fca4b7654a8e8e755b5d6f62a9890201d85c5e16114b411865f6847c54d7e0fc820267506f6532f626605878aa97f400641967412d98ee83fb4c06c0217a0da6fca4b7654a8e8e755b5d6f62a98902000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a5950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000446bfbb5185d79dbbfdb77f9ca81c51409c0480b00000000000000000000000022d4c35a4f2b229a928b1b569b2f60225976426a000000000000000000000000000000000000000000000000000000000000050a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a595000000000000000000000000206586b59c9f4b2cfa7604a18bc9c4061c334e7c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022d4c35a4f2b229a928b1b569b2f60225976426a000000000000000000000000000000000000000000000000000000000000050a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe4000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa164736f6c634300080a000a",
    "sourceMap": "239:1269:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:92;;;:::i;:::-;;1268:238;;;:::i;834:204::-;;;:::i;690:140::-;;;:::i;7759:54:7:-;;1671:64:0;7759:54:7;;;;;-1:-1:-1;;;;;194:32:8;;;176:51;;164:2;149:18;7759:54:7;;;;;;;;569:117:5;;;:::i;406:159::-;;;:::i;1042:222::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;403:14:8;;396:22;378:41;;366:2;351:18;1819:584:0;238:187:8;1572:26:0;;;;;;;;;310:92:5;389:6;361:36;;;;;:::i;:::-;-1:-1:-1;;;;;194:32:8;;;176:51;;164:2;149:18;361:36:5;;;;;;;;;;;;;;;;;;;;;;;349:9;;:48;;;;;-1:-1:-1;;;;;349:48:5;;;;;-1:-1:-1;;;;;349:48:5;;;;;;310:92::o;1268:238::-;1328:33;;-1:-1:-1;;;1328:33:5;;1354:5;1328:33;;;176:51:8;1671:64:0;;1328:17:5;;149:18:8;;1328:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1387:41:5;;;;;;;;;;;;;;;;;1367:62;;-1:-1:-1;;;1367:62:5;;1671:64:0;;-1:-1:-1;1367:19:5;;-1:-1:-1;1367:62:5;;1387:41;1367:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1437:9:5;;:39;;-1:-1:-1;;;1437:39:5;;1469:5;1437:39;;;176:51:8;1437:9:5;;;;-1:-1:-1;;;;;1437:9:5;;-1:-1:-1;1437:23:5;;-1:-1:-1;149:18:8;;1437:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1483:18:5;;;-1:-1:-1;;;1483:18:5;;;;1671:64:0;;-1:-1:-1;1483:16:5;;-1:-1:-1;1483:18:5;;;;;1695:37:0;;1483:18:5;;;;;;;1695:37:0;1671:64;1483:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1268:238::o;834:204::-;894:9;;;:27;;-1:-1:-1;;;894:27:5;;;;;378:41:8;;;;894:9:5;;;-1:-1:-1;;;;;894:9:5;;:20;;351:18:8;;894:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;927:54:5;;-1:-1:-1;;;927:54:5;;-1:-1:-1;;;927:54:5;;;1529:52:8;1671:64:0;;-1:-1:-1;927:19:5;;-1:-1:-1;1502:18:8;;927:54:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:9;;;;;;;;;-1:-1:-1;;;;;988:9:5;-1:-1:-1;;;;;988:21:5;;1010:5;1017:15;;;;;;;;;;;;;;;;;988:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;690:140;732:9;;:39;;-1:-1:-1;;;732:39:5;;764:5;732:39;;;176:51:8;732:9:5;;;;-1:-1:-1;;;;;732:9:5;;:23;;149:18:8;;732:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:48;786:9;;;;;;;;;-1:-1:-1;;;;;786:9:5;-1:-1:-1;;;;;786:20:5;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;818:5;777:8;:48::i;:::-;690:140::o;569:117::-;608:9;;;:27;;-1:-1:-1;;;608:27:5;;;;;378:41:8;;;;608:9:5;;;-1:-1:-1;;;;;608:9:5;;:20;;351:18:8;;608:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:40;652:9;;;;;;;;;-1:-1:-1;;;;;652:9:5;-1:-1:-1;;;;;652:17:5;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;641:10;:40::i;406:159::-;1695:37:0;464:9:5;:26;;;-1:-1:-1;;;464:26:5;;;;1671:64:0;;446:17:5;;464:9;;;;-1:-1:-1;;;;;464:9:5;;:24;;:26;;;;;;;;;;;;;;;:9;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;492:15;;;;;;;;;;;;;;;;;446:62;;;;;;;;;;;;;;;;:::i;1042:222::-;1099:33;;-1:-1:-1;;;1099:33:5;;1125:5;1099:33;;;176:51:8;1671:64:0;;1099:17:5;;149:18:8;;1099:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1158:41:5;;;;;;;;;;;;;;;;;1138:62;;-1:-1:-1;;;1138:62:5;;1671:64:0;;-1:-1:-1;1138:19:5;;-1:-1:-1;1138:62:5;;1158:41;1138:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1207:9:5;;;:27;;-1:-1:-1;;;1207:27:5;;;;;378:41:8;;;;1207:9:5;;;-1:-1:-1;;;;;1207:9:5;;-1:-1:-1;1207:20:5;;-1:-1:-1;351:18:8;;1207:27:5;238:187:8;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2924:42;2912:55;2993:16;1980:374;;2196:43;;;1671:64;2196:43;;;2963:51:8;;;-1:-1:-1;;;3030:18:8;;;3023:34;2196:43:0;;;;;;;;;2936:18:8;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;3549:277::-;3617:1;-1:-1:-1;;;;;3612:6:0;:1;-1:-1:-1;;;;;3612:6:0;;3608:212;;3639:44;;;;;3925:2:8;3907:21;;;3964:2;3944:18;;;3937:30;4003:34;3998:2;3983:18;;3976:62;-1:-1:-1;;;4069:2:8;4054:18;;4047:35;4114:3;4099:19;;3723:401;3639:44:0;;;;;;;;3702:34;;;4341:21:8;;;4398:2;4378:18;;;4371:30;-1:-1:-1;;;4432:2:8;4417:18;;4410:40;-1:-1:-1;;;;;4524:32:8;;4517:4;4502:20;;4495:62;3702:34:0;;;;;;;4482:3:8;3702:34:0;;;3755;;;4780:21:8;;;4837:2;4817:18;;;4810:30;-1:-1:-1;;;4871:2:8;4856:18;;4849:40;-1:-1:-1;;;;;4963:32:8;;4956:4;4941:20;;4934:62;3755:34:0;;;;;;;4921:3:8;3755:34:0;;;3803:6;:4;:6::i;:::-;3549:277;;:::o;3189:157::-;3249:9;3244:96;;3279:30;;;;;5209:2:8;5191:21;;;5248:2;5228:18;;;5221:30;5287:25;5282:2;5267:18;;5260:53;5345:2;5330:18;;5007:347;3279:30:0;;;;;;;;3323:6;:4;:6::i;:::-;3189:157;:::o;2410:358::-;2924:42;2912:55;2993:16;2445:293;;2627:67;;;1671:64;2627:67;;;5561:51:8;;;-1:-1:-1;;;5628:18:8;;;5621:34;;;;2687:4:0;5671:18:8;;;5664:34;2561:43:0;;5534:18:8;;2627:67:0;;;-1:-1:-1;;2627:67:0;;;;;;;;;;2516:196;;;2627:67;2516:196;;:::i;:::-;;;;-1:-1:-1;;2516:196:0;;;;;;;;;;2481:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2445:293;2747:7;:14;;-1:-1:-1;;2747:14:0;;;;;2410:358::o;-1:-1:-1:-;;;;;;;;:::o;638:258:8:-;710:1;720:113;734:6;731:1;728:13;720:113;;;810:11;;;804:18;791:11;;;784:39;756:2;749:10;720:113;;;851:6;848:1;845:13;842:48;;;-1:-1:-1;;886:1:8;868:16;;861:27;638:258::o;901:257::-;942:3;980:5;974:12;1007:6;1002:3;995:19;1023:63;1079:6;1072:4;1067:3;1063:14;1056:4;1049:5;1045:16;1023:63;:::i;:::-;1140:2;1119:15;-1:-1:-1;;1115:29:8;1106:39;;;;1147:4;1102:50;;901:257;-1:-1:-1;;901:257:8:o;1163:217::-;1310:2;1299:9;1292:21;1273:4;1330:44;1370:2;1359:9;1355:18;1347:6;1330:44;:::i;:::-;1322:52;1163:217;-1:-1:-1;;;1163:217:8:o;1592:296::-;1775:6;1764:9;1757:25;1818:2;1813;1802:9;1798:18;1791:30;1738:4;1838:44;1878:2;1867:9;1863:18;1855:6;1838:44;:::i;:::-;1830:52;1592:296;-1:-1:-1;;;;1592:296:8:o;1893:290::-;1963:6;2016:2;2004:9;1995:7;1991:23;1987:32;1984:52;;;2032:1;2029;2022:12;1984:52;2058:16;;-1:-1:-1;;;;;2103:31:8;;2093:42;;2083:70;;2149:1;2146;2139:12;2188:277;2255:6;2308:2;2296:9;2287:7;2283:23;2279:32;2276:52;;;2324:1;2321;2314:12;2276:52;2356:9;2350:16;2409:5;2402:13;2395:21;2388:5;2385:32;2375:60;;2431:1;2428;2421:12;2470:314;-1:-1:-1;;;;;2645:32:8;;2627:51;;2714:2;2709;2694:18;;2687:30;;;-1:-1:-1;;2734:44:8;;2759:18;;2751:6;2734:44;:::i;3068:371::-;-1:-1:-1;;;;;;3253:33:8;;3241:46;;3310:13;;3223:3;;3332:61;3310:13;3382:1;3373:11;;3366:4;3354:17;;3332:61;:::i;:::-;3413:16;;;;3431:1;3409:24;;3068:371;-1:-1:-1;;;3068:371:8:o;3444:274::-;3573:3;3611:6;3605:13;3627:53;3673:6;3668:3;3661:4;3653:6;3649:17;3627:53;:::i;:::-;3696:16;;;;;3444:274;-1:-1:-1;;3444:274:8:o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/home/daniel/Documents/sunspot/packages/telescope-manual/src/test/TelescopeManual.t.sol",
    "exportedSymbols": {
      "Context": [
        1950
      ],
      "DSTest": [
        1783
      ],
      "Ownable": [
        1888
      ],
      "ReentrancyGuard": [
        1928
      ],
      "TelescopeManual": [
        2043
      ],
      "TelescopeManualTest": [
        2228
      ],
      "Test": [
        2650
      ],
      "atomicMatchData": [
        2236
      ]
    },
    "id": 2229,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2045,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:5"
      },
      {
        "absolutePath": "/home/daniel/Documents/sunspot/packages/telescope-manual/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "id": 2046,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2229,
        "sourceUnit": 1784,
        "src": "64:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/daniel/Documents/sunspot/packages/telescope-manual/src/test/utils/Test.sol",
        "file": "./utils/Test.sol",
        "id": 2048,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2229,
        "sourceUnit": 2651,
        "src": "91:40:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2047,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "100:4:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/daniel/Documents/sunspot/packages/telescope-manual/src/test/fixtures/WyvernExchangeFixtures.sol",
        "file": "./fixtures/WyvernExchangeFixtures.sol",
        "id": 2050,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2229,
        "sourceUnit": 2237,
        "src": "132:72:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2049,
              "name": "atomicMatchData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "141:15:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/daniel/Documents/sunspot/packages/telescope-manual/src/TelescopeManual.sol",
        "file": "../TelescopeManual.sol",
        "id": 2051,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2229,
        "sourceUnit": 2044,
        "src": "205:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2052,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2650,
              "src": "271:4:5"
            },
            "id": 2053,
            "nodeType": "InheritanceSpecifier",
            "src": "271:4:5"
          }
        ],
        "canonicalName": "TelescopeManualTest",
        "contractDependencies": [
          2043
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2228,
        "linearizedBaseContracts": [
          2228,
          2650,
          1783,
          2636
        ],
        "name": "TelescopeManualTest",
        "nameLocation": "248:19:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2056,
            "mutability": "mutable",
            "name": "telescope",
            "nameLocation": "296:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 2228,
            "src": "280:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TelescopeManual_$2043",
              "typeString": "contract TelescopeManual"
            },
            "typeName": {
              "id": 2055,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2054,
                "name": "TelescopeManual",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2043,
                "src": "280:15:5"
              },
              "referencedDeclaration": 2043,
              "src": "280:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                "typeString": "contract TelescopeManual"
              }
            },
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2649
            ],
            "body": {
              "id": 2071,
              "nodeType": "Block",
              "src": "343:59:5",
              "statements": [
                {
                  "expression": {
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2060,
                      "name": "telescope",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2056,
                      "src": "349:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                        "typeString": "contract TelescopeManual"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307842454546",
                              "id": 2066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "389:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_48879_by_1",
                                "typeString": "int_const 48879"
                              },
                              "value": "0xBEEF"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_48879_by_1",
                                "typeString": "int_const 48879"
                              }
                            ],
                            "id": 2065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "381:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2064,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "381:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "381:15:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "361:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TelescopeManual_$2043_$",
                          "typeString": "function (address) returns (contract TelescopeManual)"
                        },
                        "typeName": {
                          "id": 2062,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2061,
                            "name": "TelescopeManual",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2043,
                            "src": "365:15:5"
                          },
                          "referencedDeclaration": 2043,
                          "src": "365:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                            "typeString": "contract TelescopeManual"
                          }
                        }
                      },
                      "id": 2068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "361:36:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                        "typeString": "contract TelescopeManual"
                      }
                    },
                    "src": "349:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                      "typeString": "contract TelescopeManual"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "349:48:5"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 2072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "319:5:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2058,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "334:8:5"
            },
            "parameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:2:5"
            },
            "returnParameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:5"
            },
            "scope": 2228,
            "src": "310:92:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2091,
              "nodeType": "Block",
              "src": "440:125:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2078,
                            "name": "telescope",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2056,
                            "src": "464:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                              "typeString": "contract TelescopeManual"
                            }
                          },
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wyvernExchange",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1969,
                          "src": "464:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "464:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2081,
                        "name": "atomicMatchData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "492:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2075,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2646,
                        "src": "446:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2433",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2413,
                      "src": "446:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "446:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2083,
                  "nodeType": "ExpressionStatement",
                  "src": "446:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "537:5:5",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2088,
                        "name": "atomicMatchData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "544:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2084,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "515:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "atomicMatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2018,
                      "src": "515:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory) payable external"
                      }
                    },
                    "id": 2089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2090,
                  "nodeType": "ExpressionStatement",
                  "src": "515:45:5"
                }
              ]
            },
            "functionSelector": "7772e842",
            "id": 2092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAtomicMatch",
            "nameLocation": "415:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:2:5"
            },
            "returnParameters": {
              "id": 2074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:5"
            },
            "scope": 2228,
            "src": "406:159:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2109,
              "nodeType": "Block",
              "src": "602:84:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "629:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2095,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "608:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2042,
                      "src": "608:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2100,
                  "nodeType": "ExpressionStatement",
                  "src": "608:27:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2102,
                              "name": "telescope",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2056,
                              "src": "652:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                                "typeString": "contract TelescopeManual"
                              }
                            },
                            "id": 2103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "enabled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1971,
                            "src": "652:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 2104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "652:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 2105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "675:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "652:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2101,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        266,
                        287
                      ],
                      "referencedDeclaration": 266,
                      "src": "641:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2108,
                  "nodeType": "ExpressionStatement",
                  "src": "641:40:5"
                }
              ]
            },
            "functionSelector": "7424b36c",
            "id": 2110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetEnabled",
            "nameLocation": "578:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:2:5"
            },
            "returnParameters": {
              "id": 2094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:0:5"
            },
            "scope": 2228,
            "src": "569:117:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2132,
              "nodeType": "Block",
              "src": "726:104:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3078414245",
                            "id": 2118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "764:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2750_by_1",
                              "typeString": "int_const 2750"
                            },
                            "value": "0xABE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2750_by_1",
                              "typeString": "int_const 2750"
                            }
                          ],
                          "id": 2117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "756:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2116,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "756:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "756:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2113,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "732:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFeeArbiter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2030,
                      "src": "732:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2121,
                  "nodeType": "ExpressionStatement",
                  "src": "732:39:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 2123,
                            "name": "telescope",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2056,
                            "src": "786:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                              "typeString": "contract TelescopeManual"
                            }
                          },
                          "id": 2124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeArbiter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1963,
                          "src": "786:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "786:22:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "3078414245",
                            "id": 2128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "818:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2750_by_1",
                              "typeString": "int_const 2750"
                            },
                            "value": "0xABE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2750_by_1",
                              "typeString": "int_const 2750"
                            }
                          ],
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "810:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "810:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "810:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2122,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        317,
                        342,
                        372,
                        397,
                        456,
                        481,
                        511,
                        536,
                        1636,
                        1671
                      ],
                      "referencedDeclaration": 317,
                      "src": "777:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "777:48:5"
                }
              ]
            },
            "functionSelector": "36e6d5ea",
            "id": 2133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetFeeArbiter",
            "nameLocation": "699:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:2:5"
            },
            "returnParameters": {
              "id": 2112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "726:0:5"
            },
            "scope": 2228,
            "src": "690:140:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2157,
              "nodeType": "Block",
              "src": "888:150:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "915:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2136,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "894:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2042,
                      "src": "894:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2141,
                  "nodeType": "ExpressionStatement",
                  "src": "894:27:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2145,
                            "name": "TelescopeManual",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2043,
                            "src": "947:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TelescopeManual_$2043_$",
                              "typeString": "type(contract TelescopeManual)"
                            }
                          },
                          "id": 2146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Disabled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1973,
                          "src": "947:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "947:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 2142,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2646,
                        "src": "927:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2433",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2369,
                      "src": "927:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 2148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "927:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2149,
                  "nodeType": "ExpressionStatement",
                  "src": "927:54:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1010:5:5",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2154,
                        "name": "atomicMatchData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "1017:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2150,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "988:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "atomicMatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2018,
                      "src": "988:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory) payable external"
                      }
                    },
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "988:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2156,
                  "nodeType": "ExpressionStatement",
                  "src": "988:45:5"
                }
              ]
            },
            "functionSelector": "2a5c2bf2",
            "id": 2158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCannotAtomicMatchWhenNotEnabled",
            "nameLocation": "843:35:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:2:5"
            },
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:5"
            },
            "scope": 2228,
            "src": "834:204:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2190,
              "nodeType": "Block",
              "src": "1093:171:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3078424144",
                            "id": 2166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1125:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2989_by_1",
                              "typeString": "int_const 2989"
                            },
                            "value": "0xBAD"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2989_by_1",
                              "typeString": "int_const 2989"
                            }
                          ],
                          "id": 2165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1117:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2164,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1117:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1117:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2161,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2646,
                        "src": "1099:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2433",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2325,
                      "src": "1099:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2169,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:33:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 2175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1164:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 2174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1158:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 2173,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1158:5:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1158:41:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2170,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2646,
                        "src": "1138:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2433",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2364,
                      "src": "1138:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1138:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2178,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1228:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2179,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "1207:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2042,
                      "src": "1207:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1207:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2184,
                  "nodeType": "ExpressionStatement",
                  "src": "1207:27:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2185,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2646,
                        "src": "1241:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2433",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2342,
                      "src": "1241:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 2188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1241:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2189,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:18:5"
                }
              ]
            },
            "functionSelector": "94ab9ac1",
            "id": 2191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCannotSetEnabledWhenNotOwner",
            "nameLocation": "1051:32:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1083:2:5"
            },
            "returnParameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:0:5"
            },
            "scope": 2228,
            "src": "1042:222:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2226,
              "nodeType": "Block",
              "src": "1322:184:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3078424144",
                            "id": 2199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1354:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2989_by_1",
                              "typeString": "int_const 2989"
                            },
                            "value": "0xBAD"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2989_by_1",
                              "typeString": "int_const 2989"
                            }
                          ],
                          "id": 2198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1346:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2197,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1346:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1346:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2194,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2646,
                        "src": "1328:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2433",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2325,
                      "src": "1328:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2202,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:33:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 2208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1393:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 2207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1387:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 2206,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1387:5:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1387:41:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2203,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2646,
                        "src": "1367:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2433",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2364,
                      "src": "1367:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 2210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2211,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3078414245",
                            "id": 2217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1469:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2750_by_1",
                              "typeString": "int_const 2750"
                            },
                            "value": "0xABE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2750_by_1",
                              "typeString": "int_const 2750"
                            }
                          ],
                          "id": 2216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1461:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2215,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1461:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1461:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2212,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "1437:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2043",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFeeArbiter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2030,
                      "src": "1437:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2220,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:39:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2221,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2646,
                        "src": "1483:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2433",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2342,
                      "src": "1483:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2225,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:18:5"
                }
              ]
            },
            "functionSelector": "1dd5abf8",
            "id": 2227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCannotSetFeeArbiterWhenNotOwner",
            "nameLocation": "1277:35:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1312:2:5"
            },
            "returnParameters": {
              "id": 2193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1322:0:5"
            },
            "scope": 2228,
            "src": "1268:238:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2229,
        "src": "239:1269:5",
        "usedErrors": []
      }
    ],
    "src": "39:1470:5"
  }
}