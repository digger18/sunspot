{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheats",
      "outputs": [
        {
          "internalType": "contract ICheats",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAtomicMatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCannotAtomicMatchWhenNotEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCannotSetEnabledWhenNotOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "239:884:5:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;239:884:5;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "239:884:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;303:109;;;:::i;:::-;;689:204;;;:::i;7759:54:7:-;;1671:64:0;7759:54:7;;;;;-1:-1:-1;;;;;194:32:8;;;176:51;;164:2;149:18;7759:54:7;;;;;;;;568:117:5;;;:::i;416:148::-;;;:::i;897:224::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;403:14:8;;396:22;378:41;;366:2;351:18;1819:584:0;238:187:8;1572:26:0;;;;;;;;;303:109:5;382:6;399;354:53;;;;;:::i;:::-;-1:-1:-1;;;;;660:15:8;;;642:34;;712:15;;707:2;692:18;;685:43;592:2;577:18;354:53:5;;;;;;;;;;;;;;;;;;;;;;;342:9;;:65;;;;;-1:-1:-1;;;;;342:65:5;;;;;-1:-1:-1;;;;;342:65:5;;;;;;303:109::o;689:204::-;749:9;;;:27;;-1:-1:-1;;;749:27:5;;;;;378:41:8;;;;749:9:5;;;-1:-1:-1;;;;;749:9:5;;:20;;351:18:8;;749:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;782:54:5;;-1:-1:-1;;;782:54:5;;-1:-1:-1;;;782:54:5;;;883:52:8;1671:64:0;;-1:-1:-1;782:19:5;;-1:-1:-1;856:18:8;;782:54:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;843:9;;;;;;;;;-1:-1:-1;;;;;843:9:5;-1:-1:-1;;;;;843:21:5;;865:5;872:15;;;;;;;;;;;;;;;;;843:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;689:204::o;568:117::-;607:9;;;:27;;-1:-1:-1;;;607:27:5;;;;;378:41:8;;;;607:9:5;;;-1:-1:-1;;;;;607:9:5;;:20;;351:18:8;;607:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:40;651:9;;;;;;;;;-1:-1:-1;;;;;651:9:5;-1:-1:-1;;;;;651:17:5;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;640:10;:40::i;:::-;568:117::o;416:148::-;491:15;;;;;;;;;;;;;1671:64:0;;456:17:5;;482:6;;491:15;;;;;;456:51;;;;;;;;;;;;;;;;:::i;897:224::-;954:31;;-1:-1:-1;;;954:31:5;;980:3;954:31;;;176:51:8;1671:64:0;;954:17:5;;149:18:8;;954:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1011:41:5;;;;;;;;;;;;;;;;;991:62;;-1:-1:-1;;;991:62:5;;1671:64:0;;-1:-1:-1;991:19:5;;-1:-1:-1;991:62:5;;1011:41;991:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1064:9:5;;;:27;;-1:-1:-1;;;1064:27:5;;;;;378:41:8;;;;1064:9:5;;;-1:-1:-1;;;;;1064:9:5;;-1:-1:-1;1064:20:5;;-1:-1:-1;351:18:8;;1064:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1098:18:5;;;-1:-1:-1;;;1098:18:5;;;;1671:64:0;;-1:-1:-1;1098:16:5;;-1:-1:-1;1098:18:5;;;;;1695:37:0;;1098:18:5;;;;;;;1695:37:0;1671:64;1098:18:5;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2924:42;2912:55;2993:16;1980:374;;2196:43;;;1671:64;2196:43;;;2977:51:8;;;-1:-1:-1;;;3044:18:8;;;3037:34;2196:43:0;;;;;;;;;2950:18:8;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;3189:157::-;3249:9;3244:96;;3279:30;;;;;3939:2:8;3921:21;;;3978:2;3958:18;;;3951:30;4017:25;4012:2;3997:18;;3990:53;4075:2;4060:18;;3737:347;3279:30:0;;;;;;;;3323:6;:4;:6::i;:::-;3189:157;:::o;2410:358::-;2924:42;2912:55;2993:16;2445:293;;2627:67;;;1671:64;2627:67;;;4291:51:8;;;-1:-1:-1;;;4358:18:8;;;4351:34;;;;2687:4:0;4401:18:8;;;4394:34;2561:43:0;;4264:18:8;;2627:67:0;;;-1:-1:-1;;2627:67:0;;;;;;;;;;2516:196;;;2627:67;2516:196;;:::i;:::-;;;;-1:-1:-1;;2516:196:0;;;;;;;;;;2481:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2445:293;2747:7;:14;;-1:-1:-1;;2747:14:0;;;;;2410:358::o;-1:-1:-1:-;;;;;;;;:::o;946:258:8:-;1018:1;1028:113;1042:6;1039:1;1036:13;1028:113;;;1118:11;;;1112:18;1099:11;;;1092:39;1064:2;1057:10;1028:113;;;1159:6;1156:1;1153:13;1150:48;;;-1:-1:-1;;1194:1:8;1176:16;;1169:27;946:258::o;1209:257::-;1250:3;1288:5;1282:12;1315:6;1310:3;1303:19;1331:63;1387:6;1380:4;1375:3;1371:14;1364:4;1357:5;1353:16;1331:63;:::i;:::-;1448:2;1427:15;-1:-1:-1;;1423:29:8;1414:39;;;;1455:4;1410:50;;1209:257;-1:-1:-1;;1209:257:8:o;1471:296::-;1654:6;1643:9;1636:25;1697:2;1692;1681:9;1677:18;1670:30;1617:4;1717:44;1757:2;1746:9;1742:18;1734:6;1717:44;:::i;:::-;1709:52;1471:296;-1:-1:-1;;;;1471:296:8:o;1772:277::-;1839:6;1892:2;1880:9;1871:7;1867:23;1863:32;1860:52;;;1908:1;1905;1898:12;1860:52;1940:9;1934:16;1993:5;1986:13;1979:21;1972:5;1969:32;1959:60;;2015:1;2012;2005:12;1959:60;2038:5;1772:277;-1:-1:-1;;;1772:277:8:o;2054:314::-;-1:-1:-1;;;;;2229:32:8;;2211:51;;2298:2;2293;2278:18;;2271:30;;;-1:-1:-1;;2318:44:8;;2343:18;;2335:6;2318:44;:::i;2581:217::-;2728:2;2717:9;2710:21;2691:4;2748:44;2788:2;2777:9;2773:18;2765:6;2748:44;:::i;3082:371::-;-1:-1:-1;;;;;;3267:33:8;;3255:46;;3324:13;;3237:3;;3346:61;3324:13;3396:1;3387:11;;3380:4;3368:17;;3346:61;:::i;:::-;3427:16;;;;3445:1;3423:24;;3082:371;-1:-1:-1;;;3082:371:8:o;3458:274::-;3587:3;3625:6;3619:13;3641:53;3687:6;3682:3;3675:4;3667:6;3663:17;3641:53;:::i;:::-;3710:16;;;;;3458:274;-1:-1:-1;;3458:274:8:o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/home/daniel/Documents/sunspot/packages/telescope-manual/src/test/TelescopeManual.t.sol",
    "exportedSymbols": {
      "Context": [
        1950
      ],
      "ContractTest": [
        2188
      ],
      "DSTest": [
        1783
      ],
      "Ownable": [
        1888
      ],
      "ReentrancyGuard": [
        1928
      ],
      "TelescopeManual": [
        2057
      ],
      "Test": [
        2610
      ],
      "atomicMatchData": [
        2196
      ]
    },
    "id": 2189,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2059,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:5"
      },
      {
        "absolutePath": "/home/daniel/Documents/sunspot/packages/telescope-manual/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "id": 2060,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2189,
        "sourceUnit": 1784,
        "src": "64:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/daniel/Documents/sunspot/packages/telescope-manual/src/test/utils/Test.sol",
        "file": "./utils/Test.sol",
        "id": 2062,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2189,
        "sourceUnit": 2611,
        "src": "91:40:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2061,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "100:4:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/daniel/Documents/sunspot/packages/telescope-manual/src/test/fixtures/WyvernExchangeFixtures.sol",
        "file": "./fixtures/WyvernExchangeFixtures.sol",
        "id": 2064,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2189,
        "sourceUnit": 2197,
        "src": "132:72:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2063,
              "name": "atomicMatchData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "141:15:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/daniel/Documents/sunspot/packages/telescope-manual/src/TelescopeManual.sol",
        "file": "../TelescopeManual.sol",
        "id": 2065,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2189,
        "sourceUnit": 2058,
        "src": "205:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2066,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2610,
              "src": "264:4:5"
            },
            "id": 2067,
            "nodeType": "InheritanceSpecifier",
            "src": "264:4:5"
          }
        ],
        "canonicalName": "ContractTest",
        "contractDependencies": [
          2057
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2188,
        "linearizedBaseContracts": [
          2188,
          2610,
          1783,
          2596
        ],
        "name": "ContractTest",
        "nameLocation": "248:12:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2070,
            "mutability": "mutable",
            "name": "telescope",
            "nameLocation": "289:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 2188,
            "src": "273:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TelescopeManual_$2057",
              "typeString": "contract TelescopeManual"
            },
            "typeName": {
              "id": 2069,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2068,
                "name": "TelescopeManual",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2057,
                "src": "273:15:5"
              },
              "referencedDeclaration": 2057,
              "src": "273:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                "typeString": "contract TelescopeManual"
              }
            },
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2609
            ],
            "body": {
              "id": 2089,
              "nodeType": "Block",
              "src": "336:76:5",
              "statements": [
                {
                  "expression": {
                    "id": 2087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2074,
                      "name": "telescope",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2070,
                      "src": "342:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                        "typeString": "contract TelescopeManual"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307842454546",
                              "id": 2080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "382:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_48879_by_1",
                                "typeString": "int_const 48879"
                              },
                              "value": "0xBEEF"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_48879_by_1",
                                "typeString": "int_const 48879"
                              }
                            ],
                            "id": 2079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "374:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2078,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "374:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "374:15:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307846454544",
                              "id": 2084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "399:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_65261_by_1",
                                "typeString": "int_const 65261"
                              },
                              "value": "0xFEED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_65261_by_1",
                                "typeString": "int_const 65261"
                              }
                            ],
                            "id": 2083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "391:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2082,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "391:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "391:15:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "354:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_TelescopeManual_$2057_$",
                          "typeString": "function (address,address) returns (contract TelescopeManual)"
                        },
                        "typeName": {
                          "id": 2076,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2075,
                            "name": "TelescopeManual",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2057,
                            "src": "358:15:5"
                          },
                          "referencedDeclaration": 2057,
                          "src": "358:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                            "typeString": "contract TelescopeManual"
                          }
                        }
                      },
                      "id": 2086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "354:53:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                        "typeString": "contract TelescopeManual"
                      }
                    },
                    "src": "342:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                      "typeString": "contract TelescopeManual"
                    }
                  },
                  "id": 2088,
                  "nodeType": "ExpressionStatement",
                  "src": "342:65:5"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 2090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "312:5:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2072,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "327:8:5"
            },
            "parameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:2:5"
            },
            "returnParameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:5"
            },
            "scope": 2188,
            "src": "303:109:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2110,
              "nodeType": "Block",
              "src": "450:114:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307846454544",
                            "id": 2098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "482:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65261_by_1",
                              "typeString": "int_const 65261"
                            },
                            "value": "0xFEED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_65261_by_1",
                              "typeString": "int_const 65261"
                            }
                          ],
                          "id": 2097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "474:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2096,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "474:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "474:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2100,
                        "name": "atomicMatchData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "491:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2093,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2606,
                        "src": "456:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2393",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2373,
                      "src": "456:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 2101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "456:51:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2102,
                  "nodeType": "ExpressionStatement",
                  "src": "456:51:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "536:5:5",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2107,
                        "name": "atomicMatchData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "543:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2103,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "514:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "atomicMatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "514:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory) payable external"
                      }
                    },
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "514:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "514:45:5"
                }
              ]
            },
            "functionSelector": "7772e842",
            "id": 2111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAtomicMatch",
            "nameLocation": "425:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:2:5"
            },
            "returnParameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "450:0:5"
            },
            "scope": 2188,
            "src": "416:148:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2128,
              "nodeType": "Block",
              "src": "601:84:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "628:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2114,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "607:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "607:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "607:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2119,
                  "nodeType": "ExpressionStatement",
                  "src": "607:27:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2121,
                              "name": "telescope",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2070,
                              "src": "651:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                                "typeString": "contract TelescopeManual"
                              }
                            },
                            "id": 2122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "enabled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1967,
                            "src": "651:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "651:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 2124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "674:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "651:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2120,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        266,
                        287
                      ],
                      "referencedDeclaration": 266,
                      "src": "640:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "640:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2127,
                  "nodeType": "ExpressionStatement",
                  "src": "640:40:5"
                }
              ]
            },
            "functionSelector": "7424b36c",
            "id": 2129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetEnabled",
            "nameLocation": "577:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:2:5"
            },
            "returnParameters": {
              "id": 2113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:5"
            },
            "scope": 2188,
            "src": "568:117:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2153,
              "nodeType": "Block",
              "src": "743:150:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "770:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2132,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "749:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "749:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "749:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2137,
                  "nodeType": "ExpressionStatement",
                  "src": "749:27:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2141,
                            "name": "TelescopeManual",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2057,
                            "src": "802:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TelescopeManual_$2057_$",
                              "typeString": "type(contract TelescopeManual)"
                            }
                          },
                          "id": 2142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Disabled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1969,
                          "src": "802:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "802:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 2138,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2606,
                        "src": "782:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2393",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2329,
                      "src": "782:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 2144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2145,
                  "nodeType": "ExpressionStatement",
                  "src": "782:54:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "865:5:5",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2150,
                        "name": "atomicMatchData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "872:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2146,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "843:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "atomicMatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2020,
                      "src": "843:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory) payable external"
                      }
                    },
                    "id": 2151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "843:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2152,
                  "nodeType": "ExpressionStatement",
                  "src": "843:45:5"
                }
              ]
            },
            "functionSelector": "2a5c2bf2",
            "id": 2154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCannotAtomicMatchWhenNotEnabled",
            "nameLocation": "698:35:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:2:5"
            },
            "returnParameters": {
              "id": 2131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:5"
            },
            "scope": 2188,
            "src": "689:204:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2186,
              "nodeType": "Block",
              "src": "948:173:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307831",
                            "id": 2162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "980:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "0x1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 2161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "972:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2160,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "972:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "972:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2157,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2606,
                        "src": "954:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2393",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2285,
                      "src": "954:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "954:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2165,
                  "nodeType": "ExpressionStatement",
                  "src": "954:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 2171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1017:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 2170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1011:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 2169,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1011:5:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1011:41:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2166,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2606,
                        "src": "991:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2393",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2324,
                      "src": "991:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 2173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2174,
                  "nodeType": "ExpressionStatement",
                  "src": "991:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1085:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2175,
                        "name": "telescope",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2070,
                        "src": "1064:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TelescopeManual_$2057",
                          "typeString": "contract TelescopeManual"
                        }
                      },
                      "id": 2177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "1064:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2180,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:27:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2181,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2606,
                        "src": "1098:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICheats_$2393",
                          "typeString": "contract ICheats"
                        }
                      },
                      "id": 2183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2302,
                      "src": "1098:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 2184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1098:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2185,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:18:5"
                }
              ]
            },
            "functionSelector": "94ab9ac1",
            "id": 2187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCannotSetEnabledWhenNotOwner",
            "nameLocation": "906:32:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "938:2:5"
            },
            "returnParameters": {
              "id": 2156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:0:5"
            },
            "scope": 2188,
            "src": "897:224:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2189,
        "src": "239:884:5",
        "usedErrors": []
      }
    ],
    "src": "39:1085:5"
  }
}